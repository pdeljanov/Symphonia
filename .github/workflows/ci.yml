name: CI

on:
  push:
    branches:
      - master
  pull_request: {}

jobs:
  check:
    name: Check ${{ matrix.os }}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    - name: Setup Toolchain
      run: rustup install stable && rustup default stable

    - name: Check default features
      run: cargo check --all

    - name: Check all features
      run: cargo check --all --all-features --exclude symphonia-play

  clippy:
    name: Clippy ${{ matrix.os }}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    - name: Setup Toolchain
      run: rustup install stable && rustup default stable

    - name: Check default features
      run: cargo clippy --all -- -D warnings

    - name: Check all features
      run: cargo clippy --all --all-features --exclude symphonia-play -- -D warnings

  test:
    name: Test ${{ matrix.config.target }} on ${{ matrix.config.os }}

    env:
      CARGO: cargo
      CROSS_VERSION: v0.2.5

    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { os: ubuntu-latest, target: x86_64-unknown-linux-gnu, use-cross: false }
          - { os: macos-latest, target: x86_64-apple-darwin, use-cross: false }
          - { os: windows-latest, target: x86_64-pc-windows-msvc, use-cross: false }
          - { os: ubuntu-latest, target: powerpc-unknown-linux-gnu, use-cross: true }

    steps:
      - uses: actions/checkout@v4

      - name: Setup Toolchain
        run: rustup install stable && rustup default stable

      - name: Setup Cross
        if: matrix.config.use-cross
        run: |
          cargo install cross --locked
          echo "CARGO=cross" >> $GITHUB_ENV

      - name: Test default features
        run: ${{ env.CARGO }} test --target ${{ matrix.config.target }} --all --exclude symphonia-play

      - name: Test all features
        run: ${{ env.CARGO }} test --target ${{ matrix.config.target }} --all --all-features --exclude symphonia-play

  fmt:
    name: Rustfmt

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Toolchain
        run: rustup install nightly --profile minimal && rustup default nightly && rustup component add rustfmt

      - name: Check formatting
        run: cargo fmt --all -- --check
